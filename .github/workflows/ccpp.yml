name: C/C++ CI

on:
  push:
    branches:
      - '*'
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: ${{ matrix.host }}-${{ matrix.config.name }}
    runs-on: ${{ matrix.host }}
    strategy:
      fail-fast: false
      matrix:
        host: [ubuntu-latest, macos-latest]
        config:
         - {
           name: gcc-default,
           cc: gcc,
           nroff: nroff,
           utmp: false,
           cflags: "",
           makeflags: ""
         }
         - {
           name: gcc-no_obsolete,
           cc: gcc,
           nroff: nroff,
           utmp: false,
           cflags: "-DDEPRECATED_FUNCTIONS_REMOVED",
           makeflags: ""
         }
         - {
           name: gcc-utmp,
           cc: gcc,
           nroff: true,
           utmp: true,
           cflags: "-DDEPRECATED_FUNCTIONS_REMOVED",
           makeflags: "-o qtmp.h"
         }
         - {
           name: clang-default,
           cc: clang,
           nroff: nroff,
           utmp: false,
           cflags: "",
           makeflags: ""
         }
         - {
           name: clang-no_obsolete,
           cc: clang,
           nroff: true,
           utmp: false,
           cflags: "-DDEPRECATED_FUNCTIONS_REMOVED",
           makeflags: ""
         }
         - {
           name: clang-utmp,
           cc: clang,
           nroff: true,
           utmp: true,
           cflags: "-DDEPRECATED_FUNCTIONS_REMOVED",
           makeflags: "-o qtmp.h"
         }

    steps:
    - name: checkout
      uses: actions/checkout@v2

    - name: test_deps
      run: |
        if [ "${OS}" = "macos-latest" ]; then
          brew install check
        else
          sudo sh -c 'echo "deb http://azure.archive.ubuntu.com/ubuntu hirsute universe" >> /etc/apt/sources.list'
          sudo apt-get update
          sudo apt-get install check
        fi
      env:
        OS: ${{ matrix.host }}

    - name: configure
      run: echo "${CC} -O2 -fPIC -Wall -Wshadow -Werror=implicit-function-declaration -Wimplicit-fallthrough ${CFLAGS}" > conf-cc
      env:
        CC: ${{ matrix.config.cc }}
        CFLAGS: ${{ matrix.config.cflags }}

    - name: copy utmp
      if: matrix.config.utmp
      run: cp qtmp.h1 qtmp.h

    - name: make
      run: make -j 2 ${MAKEFLAGS} it man NROFF=${NROFF}
      env:
        NROFF: ${{ matrix.config.nroff }}
        MAKEFLAGS: ${{ matrix.config.makeflags }}

    - name: unittests
      run: make test
